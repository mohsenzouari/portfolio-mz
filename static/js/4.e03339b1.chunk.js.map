{"version":3,"sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/contact/Contact.jsx"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Contact","formRef","useRef","useState","done","setDone","className","id","src","alt","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","error","type","placeholder","name","rows"],"mappings":"8LAAaA,G,MAAQ,CACjBC,QAAS,4BCDAC,EAAiB,SAACC,EAAQC,EAAWC,GAC9C,IAAKF,EACD,KAAM,iFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,G,QCVEC,EACT,WAAYC,GAAc,oBACtBC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,cCDpBC,EAAW,SAACC,EAAKC,GAAuB,IAAjBC,EAAiB,uDAAP,GAC1C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQ,YAAgB,IAAbC,EAAa,EAAbA,OACtBC,EAAiB,IAAIjB,EAAsBgB,GACnB,MAA1BC,EAAed,QAA0C,OAAxBc,EAAeb,KAChDO,EAAQM,GAGRL,EAAOK,MAGfJ,EAAIE,iBAAiB,SAAS,YAAgB,IAAbC,EAAa,EAAbA,OAC7BJ,EAAO,IAAIZ,EAAsBgB,OAErCH,EAAIK,KAAK,OAAQxB,EAAMC,QAAUY,GAAK,GACtCY,OAAOC,KAAKX,GAASY,SAAQ,SAACC,GAC1BT,EAAIU,iBAAiBD,EAAKb,EAAQa,OAEtCT,EAAIW,KAAKhB,OCjBF,ECoBS,SAACV,EAAWC,EAAY0B,EAAM5B,GAClD,IAAM6B,EAAM7B,GAAUH,EAAMiC,QACtBC,EAvBW,SAACH,GAClB,IAAIG,EAOJ,KALIA,EADgB,kBAATH,EACOI,SAASC,cAAcL,GAGvBA,IAE2B,SAAzBG,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,EAYaI,CAAaP,GACjC7B,EAAe8B,EAAK5B,EAAWC,GAC/B,IAAMkC,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAAcrC,GAC9BmC,EAASE,OAAO,cAAepC,GAC/BkC,EAASE,OAAO,UAAWT,GACpBpB,EAAS,4BAA6B2B,I,OC7BlC,SAASG,IACtB,IAAMC,EAAUC,mBAChB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAqBA,OACE,sBAAKC,UAAU,UAAUC,GAAG,UAA5B,UACE,qBAAKD,UAAU,OAAf,SACE,qBAAKE,IAAI,mBAAmBC,IAAI,OAElC,sBAAKH,UAAU,QAAf,UACE,0CACA,uBAAMI,IAAKT,EAASU,SA1BL,SAACC,GACpBA,EAAEC,iBACFC,EAEI,kBACA,mBACAb,EAAQc,QACR,qBAEDC,MACC,SAACC,GACCC,QAAQC,IAAIF,EAAOjD,MACnBqC,GAAQ,MAEV,SAACe,GACCF,QAAQC,IAAIC,EAAMpD,UAWpB,UACE,uBAEEqD,KAAK,OACLC,YAAY,OACZC,KAAK,cAEP,uBAEEF,KAAK,OACLC,YAAY,UACZC,KAAK,iBAEP,uBAEEF,KAAK,OACLC,YAAY,QACZC,KAAK,eAEP,0BAEEC,KAAK,IACLF,YAAY,UACZC,KAAK,YAEP,4CACCnB,GAAQ","file":"static/js/4.e03339b1.chunk.js","sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { useState, useRef } from \"react\";\nimport \"./contact.scss\";\nimport emailjs from \"emailjs-com\";\n\nexport default function Contact() {\n  const formRef = useRef();\n  const [done, setDone] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    emailjs\n      .sendForm(\n        \"service_lj7zjxt\",\n        \"template_fzey2t9\",\n        formRef.current,\n        \"lx-fSp-qAvEZhlFCS\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          setDone(true);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n  return (\n    <div className=\"contact\" id=\"contact\">\n      <div className=\"left\">\n        <img src=\"assets/shake.svg\" alt=\"\" />\n      </div>\n      <div className=\"right\">\n        <h2 >Contact.</h2>\n        <form ref={formRef} onSubmit={handleSubmit}>\n          <input\n            // style={{ backgroundColor: darkMode && \"#333\" }}\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"user_name\"\n          />\n          <input\n            // style={{ backgroundColor: darkMode && \"#333\" }}\n            type=\"text\"\n            placeholder=\"Subject\"\n            name=\"user_subject\"\n          />\n          <input\n            // style={{ backgroundColor: darkMode && \"#333\" }}\n            type=\"text\"\n            placeholder=\"Email\"\n            name=\"user_email\"\n          />\n          <textarea\n            // style={{ backgroundColor: darkMode && \"#333\" }}\n            rows=\"5\"\n            placeholder=\"Message\"\n            name=\"message\"\n          />\n          <button>Submit</button>\n          {done && \" Thank you :) ...\"}\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}