{"version":3,"sources":["components/projects/Projects.jsx"],"names":["Projects","useState","currentSlide","setCurrentSlide","navigate","useNavigate","useLocale","locale","isEnglish","handleClick","way","projectData","length","className","id","name","content","style","transform","map","d","titleEn","titleFr","descriptionEn","descriptionFr","languages","onClick","type","src","process","img","alt"],"mappings":"4OASe,SAASA,IAEtB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAWC,cAGf,EAA4BC,cAA5B,mBAAOC,EAAP,KACMC,GADN,KAC6B,OAAXD,GAEZE,EAAc,SAACC,GAEfP,EADI,SAARO,EACoBR,EAAe,EAAIA,EAAe,EAAI,EACtCA,EAAeS,IAAYC,OAAS,EAAIV,EAAe,EAAI,IAGjF,OACE,sBAAKW,UAAU,WAAWC,GAAG,WAA7B,UACE,eAAC,IAAD,WACE,gDACA,sBAAMC,KAAK,cAAcC,QAAQ,sCAGnC,qBACEH,UAAU,SACVI,MAAO,CAAEC,UAAU,eAAD,OAAgC,IAAfhB,EAAjB,QAFpB,SAIGS,IAAYQ,KAAI,SAACC,GAAD,OACf,qBAAKP,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6BAAKL,EAAYY,EAAEC,QAAUD,EAAEE,UAC/B,4BAAId,EAAYY,EAAEG,cAAgBH,EAAEI,gBACpC,6CAAgBJ,EAAEK,gBAEnB,wBAAQC,QAAS,WACftB,EAAS,aAAD,OAAcgB,EAAEN,MACvBa,KAAK,SAFR,SAEkBnB,EAAY,eAAiB,0BAElD,qBAAKK,UAAU,QAAf,SACE,qBACEe,IAAG,UAAKC,gBAAL,YAA+BT,EAAEU,KACpCC,IAAI,qBAfoBX,EAAEN,SAsBtC,qBACEc,IAAI,mBACJf,UAAU,aACVkB,IAAI,GACJL,QAAS,kBAAMjB,EAAY,WAE7B,qBACEmB,IAAI,mBACJf,UAAU,cACVkB,IAAI,GACJL,QAAS,kBAAMjB","file":"static/js/5.e4d037a8.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from \"react\";\nimport \"./projects.scss\";\nimport { projectData} from \"../../data\";\nimport { Helmet } from 'react-helmet-async';\nimport { useLocale } from '../LocaleProvider';\nimport { FormattedMessage } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Projects() {\n \n  const [currentSlide, setCurrentSlide] = useState(0);\n  let navigate = useNavigate();\n  \n  //toggle la langue fr/en\n  const [locale, setLocale] = useLocale();\n  const isEnglish = locale === 'en';\n   \n  const handleClick = (way) => {\n    way === \"left\"\n      ? setCurrentSlide(currentSlide > 0 ? currentSlide - 1 : 2)\n      : setCurrentSlide(currentSlide < projectData.length - 1 ? currentSlide + 1 : 0);\n  };\n  \n  return (\n    <div className=\"projects\" id=\"projects\">\n      <Helmet>\n        <title>Projects - </title>\n        <meta name=\"description\" content=\"Page des projets réalisé\"/>\n      </Helmet>\n       {/* <h1><FormattedMessage id=\"app.projects.title\" /></h1> */}\n      <div\n        className=\"slider\"\n        style={{ transform: `translateX(-${currentSlide * 100}vw)` }}\n      >\n        {projectData.map((d) => (\n          <div className=\"container\" key={d.id}>\n            <div className=\"item\">\n              <div className=\"left\">\n                <div className=\"leftContainer\">\n                  <h2>{isEnglish ? d.titleEn : d.titleFr}</h2>\n                  <p>{isEnglish ? d.descriptionEn : d.descriptionFr}</p>\n                  <p>Languages : {d.languages}</p>\n                 </div>\n                 <button onClick={()=> {\n                   navigate(`/projects/${d.id}`);\n                 }} type=\"submit\">{isEnglish ? \"More Details\" : \"Plus de Détails\"}</button>\n              </div>\n              <div className=\"right\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/${d.img}`}\n                  alt=\"imgProject\"\n                />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <img\n        src=\"assets/arrow.png\"\n        className=\"arrow left\"\n        alt=\"\"\n        onClick={() => handleClick(\"left\")}\n      />\n      <img\n        src=\"assets/arrow.png\"\n        className=\"arrow right\"\n        alt=\"\"\n        onClick={() => handleClick()}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}